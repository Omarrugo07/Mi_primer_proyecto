<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAVsAAACGCAYAAABzGCmoAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAO
        wwAADsMBx2+oZAAACvpJREFUeF7t3b/NJGUWxWEyIAMywF8DMiADMsBgbTLAxyAD/DEmBEQCWLi4SBsC
        u2elgw53TlV193d3pme/35UeddWt939VvV9rjOlP/hN/AgD+52oSALCrJgEAu2oSALCrJgEAu2oSALCr
        JgEAu2oSALCrJgEAu2oSALCrJgEAu2oSALCrJgEAu2oSALCrJgEAu2oSALCrJgEAu2oSALCrJgEAu2oS
        ALCrJgEAu2oSALCrJgEAu2oSALCrJgEAu2oSALCrJgEAu2oSALCrJgEAu2oSALCrJgEAu2oSALCrJgEA
        u2oSALCrJgEAu2oSALCrJgEAu2oSALCrJgEAu2oSALCrJgEAu2ryqf3xxx9/Znz77bd/XdOx4s2bN3+r
        47xC9fOa/Pbbb/+9NvNnfSXV/+GHH+o1jeWsrrh/h859LceucDu//PLLO/PUufIzl/XaNYfzcz46zphr
        6PF/+eWXf+Xa+JKuzzqT+pnjzrF5XNmPys/xqQ/FXJs011mhnNqe7fmajzM8n9letuHxZHhOXhdFzutD
        3pPZt7V5XF3PtjWWjLw/6k/9tvviUDmPuY1vXnObWUbr5sj+ReUVre0H1ORT0+L4QfeN8DUtlswHL+to
        4XLxdPN1vT1QZ32lo4dR1IbH1a7LUX3lFPmAem5qb744Op/9HPWvc7clmp/L5HjaGGZdlZfsQ8dnL7bi
        qoz68PrbHJvOFb6u8jk28bpkuanVM+Xdp9rJeSq8NirjNmZ7WU/lFb5ms47mlsc5b8X7uifZt2msCn1m
        bs4x681x+774eq6zPnP+0samnOeaeVHk2GebimxPbeV8VNbtO/cCNfnUdENyQRS+eYqjMnmetNjSbu5Z
        XylvaFJdXfODN6/bUf2jvLQHT+fK+/ysf0Wbi2S/R2NQeG1cJnNtfKayfrBzg5jm+kuOR586V1ued2tT
        55rr0VzkbCy65rkp8prC65jrPNvzWGe5pDJHY8ixH81DoX6zTOYevSetv6Mx2HwWTfU8hlkmx6e2VdbX
        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
        8ue/AWCVVeMcmBYXAAAAAElFTkSuQmCC
</value>
  </data>
</root>