<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>